# -*- coding: utf-8 -*-
"""opencv-contornos,bordas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gNDe39_Oqllg6F0oOTE5DnxQPizjylT6
"""

# instalacoes
!pip install opencv-python
!pip install numpy
!pip install matplotlib

#imports

import cv2
import numpy as np
from matplotlib import pyplot as plt

# funcoes

def showImage(obj_img,type=''):
  # converter de BGR to RGB
  # por padrao as imagens sao abertas no formato BGR
  if type == 'hsv' :
    bgr = cv2.cvtColor(obj_img, cv2.COLOR_HSV2BGR)
  if type != None:
    obj_img = cv2.cvtColor(obj_img,cv2.COLOR_BGR2RGB)

  plt.imshow(obj_img)
  #plt.show()
  plt
def printImage(obj_img,type='bgr'):
  """alias"""
  showImage(obj_img,type)
def img(obj,type='bgr'):
  """alias"""
  showImage(obj,type)

!git clone https://github.com/AlexandroGonSan/Images img

im = cv2.imread('img/geo1.jpg')
img(im)

im = cv2.resize(im,(500,500))
img(im)

#cv2.imshow("original",img)
im = cv2.bilateralFilter(im, 9, 75,75)
img(im)

#to remap the color of image
hsv = cv2.cvtColor(im, cv2.COLOR_BGR2HSV)
#thwer runge of selected color
lower = np.array([0,50,50])
#copper range of selected color
upper = np.array([10,255,255])
mask = cv2.inRange(hsv, lower, upper)
print(type(hsv))
print(type(mask))
#img(mask,'hsv')

imgresult = cv2.bitwise_and(im,im,mask=mask)
img(imgresult,'hsv')

bgr = cv2.cvtColor(imgresult, cv2.COLOR_HSV2BGR)
imggray = cv2.cvtColor(bgr, cv2.COLOR_BGR2GRAY)
img(imggray,None)

ret,thresh = cv2.threshold(imggray,0,255,0)
contour,_ = cv2.findContours(thresh,cv2.RETR_TREE,cv2.CHAIN_APPROX_NONE)
#from google.colab.patches import cv2_imshow
#cv2_imshow(contour)
contour

cv2.drawContours(im,contour,-1,(255,0,0),2)
img(im)
#cv2.imshow("same color",img)
#cv2.waitKey(0)
#cv2.destroyAllWindows()